using CoreReport.JasperReport;
using JasperReport.ReportEntity;
using jsreport.Binary;
using jsreport.Local;
using jsreport.Shared;
using jsreport.Types;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CoreSystemConsole.ProgramEntity
{
    public class HitRateProgram
    {
        public HitRateProgram()
        {
            Console.WriteLine("Said \"Hello World!\" from HitRateProgram");

            HitRateDataView hitRateDataView = new HitRateDataView();
            //DataSet dataSet = hitRateDataView.GetDataSet();
            hitRateDataView.CreateDummyData1();
            IDictionary<string, object> dataSetObj = hitRateDataView.GetDataSetObj();

            HitRateReport hitRateReport = new HitRateReport(dataSetObj);
            //IRenderService rs = hitRateReport.GetRenderService();

            //JasperReportEntity jasperReportEntity = new JasperReportEntity(rs);
            JasperReportEntity jasperReportEntity = new JasperReportEntity(hitRateReport);
            string templateFilePath = hitRateReport.GetTemplateFilePath();
            jasperReportEntity.SavePdf(templateFilePath);

            //var rs = new LocalReporting()
            //    .UseBinary(JsReportBinary.GetBinary())
            //    .AsUtility()
            //    .Create();

            //var report = rs.RenderAsync(RenderRequest_1_helloWorld).Result;
            //report.Content.CopyTo(File.OpenWrite("out.pdf"));

            //var invoiceReport = rs.RenderByNameAsync("Invoice", InvoiceData).Result;
            //invoiceReport.Content.CopyTo(File.OpenWrite("invoice.pdf"));


            /*
            var report2 = rs.RenderAsync(new RenderRequest
            {
                Template = new Template
                {
                    Recipe = Recipe.PhantomPdf,
                    Engine = Engine.None,
                    Content = "<style>h1 {color: red}</style><h1>Hello world</h1>"
                }
            }).Result;
            using (var fs = File.Create("out.pdf"))
            {
                report.Content.CopyTo(fs);
            }
            */

        }


        static object InvoiceData = new
        {
            number = "123",
            seller = new
            {
                name = "Next Step Webs, Inc.",
                road = "12345 Sunny Road",
                country = "Sunnyville, TX 12345"
            },
            buyer = new
            {
                name = "Acme Corp.",
                road = "16 Johnson Road",
                country = "Paris, France 8060"
            },
            items = new[]
            {
                new { name = "Website design", price = 300 }
            }
        };

        private static RenderRequest RenderRequest_1_helloWorld = new RenderRequest()
        {
            Template = new Template()
            {
                Content = "<style>h1 {color: red}</style><h1>Hello world</h1>This document was generated by {{message}}",
                Engine = Engine.Handlebars,
                Recipe = Recipe.ChromePdf
            },
            Data = new
            {
                message = "jsreport for .NET!!!"
            }
        };
    }
}
